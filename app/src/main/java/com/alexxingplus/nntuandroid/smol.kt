package com.alexxingplus.nntuandroid

import android.appwidget.AppWidgetManager
import android.appwidget.AppWidgetProvider
import android.content.Context
import android.content.Intent
import android.widget.RemoteViews
import android.widget.Toast
import com.alexxingplus.nntuandroid.ui.*
import java.util.*
import kotlin.collections.ArrayList
import kotlin.concurrent.thread

/**
 * Implementation of App Widget functionality.
 *  –∞—Ö–∞—Ö—Ö–∞—Ö—Ö–∞ –∞ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫ —á—Ç–æ–±—ã –≤–∏–¥–∂–µ—Ç —Ä–∞–±–æ—Ç–∞–ª —Ö–æ—Ç—å –∫–∞–∫-—Ç–æ....
 */
class smol : AppWidgetProvider() {
    override fun onUpdate(
        context: Context,
        appWidgetManager: AppWidgetManager,
        appWidgetIds: IntArray
    ) {
        // There may be multiple widgets active, so update all of them

        for (appWidgetId in appWidgetIds) {
            updateSmolWidget(context, appWidgetManager, appWidgetId)
        }

    }

    override fun onEnabled(context: Context) {
        // Enter relevant functionality for when the first widget is created
    }

    override fun onDisabled(context: Context) {
        // Enter relevant functionality for when the last widget is disabled
    }

    override fun onReceive(context: Context?, intent: Intent?) {
        super.onReceive(context, intent)
        Toast.makeText(context, "what", Toast.LENGTH_SHORT)
    }
}

fun filterDayWeek(tt: ArrayList<Lesson>, day: Int, week: Int): ArrayList<Lesson>{
    var output = ArrayList<Lesson>()
    for (lesson in tt){
        val weekCompatible = lesson.weeks.contains(week) || (lesson.weeks.contains(-2) && week%2 == 0) || (lesson.weeks.contains(-1) && week%2 == 1)
        if (lesson.day == day && weekCompatible){
            output.add(lesson)
        }
    }
    output.sortBy { timeFromString(it.startTime) }
    return output
}

fun getTTArrayforWidget(tt: ArrayList<Lesson>, week: Int): ArrayList<Lesson>{
    var output = ArrayList<Lesson>()
    for (i in 0..6){
        output.addAll(filterDayWeek(tt, i, week))
    }
    return output
}


internal fun updateSmolWidget(
    context: Context,
    appWidgetManager: AppWidgetManager,
    appWidgetId: Int
) {

    // —ç—Ç–æ –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–±–∏—Ä–∞—Ç—å –¥–∞—Ç—É –≤ –≤–∏–¥–∂–µ—Ç–µ
    val months = arrayOf("—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞", "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è", "–∏—é–ª—è", "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è", "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è")
    val shortDaysOfWeek = arrayOf("–≤—Å", "–ø–Ω", "–≤—Ç", "—Å—Ä", "—á—Ç", "–ø—Ç", "—Å–±")
    val DaysOfWeek = arrayOf("–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–≤—Ç–æ—Ä–Ω–∏–∫", "—Å—Ä–µ–¥–∞", "—á–µ—Ç–≤–µ—Ä–≥", "–ø—è—Ç–Ω–∏—Ü–∞", "—Å—É–±–±–æ—Ç–∞")

    var data = ArrayList<Lesson>()
    var arrangedTT = ArrayList<Lesson>()


    val views = RemoteViews(context.packageName, R.layout.smol)
//    val updateIntent = Intent (context, smol::class.java)
//    updateIntent.setAction(AppWidgetManager.ACTION_APPWIDGET_UPDATE)
//    val ids = AppWidgetManager.getInstance(context).getAppWidgetIds(ComponentName(context, smol::class.java))
//    updateIntent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS, ids)
//    val pintent = PendingIntent.getService(context, 0, updateIntent, 0)
//    views.setOnClickPendingIntent(R.id.disNameWidget, pintent)
//    Toast.makeText(context, "Update happened", Toast.LENGTH_SHORT)

    val day = Calendar.getInstance(Locale.GERMANY)
    var nowDay = day.get(Calendar.DAY_OF_WEEK)
    var nowWeek = day.get(Calendar.WEEK_OF_YEAR) - 5
    val nowHour = day.get(Calendar.HOUR_OF_DAY)
    val nowMinute = day.get(Calendar.MINUTE)
    var actualLesson = emptyLesson()
    var nextLesson = emptyLesson()

    if (nowDay == 1) {
        nowDay = 7
//        nowWeek -= 1
    }
    else {nowDay -= 1}

    nowDay -= 1

    fun fillIn(){
        //–ø–∏—à–µ–º –¥–∞—Ç—É
        views.setTextViewText(R.id.dayLabelWidget, "–°–µ–≥–æ–¥–Ω—è ${day.get(Calendar.DATE)} ${months[day.get(Calendar.MONTH)]}, ${shortDaysOfWeek[day.get(Calendar.DAY_OF_WEEK)-1]}")


        val time = nowHour*100 + nowMinute

        val todayLessons = filterDayWeek(arrangedTT, nowDay, nowWeek)

        for (lesson in todayLessons){
            if (estTimeFromString(lesson.stopTime) > time){
                actualLesson = lesson
                if (todayLessons.indexOf(lesson) < todayLessons.size - 1){
                    nextLesson = todayLessons[todayLessons.indexOf(lesson) + 1]
                }
                break
            }
        }
        if (actualLesson.name == "" && actualLesson.weeks == ArrayList<Int>()){
            var nextweek = if (nowDay == 6) nowWeek + 1 else nowWeek
            val nextDay = if (nowDay == 6) 0 else nowDay + 1
            arrangedTT = if (nowDay == 6) getTTArrayforWidget(data, nextweek) else arrangedTT
            val nextDayLessons = filterDayWeek(arrangedTT, nextDay, nextweek)
            if (nextDayLessons.count() != 0){
                views.setTextViewText(R.id.dayLabelWidget, "–ó–∞–≤—Ç—Ä–∞")
                actualLesson = nextDayLessons[0]
                if (nextDayLessons.count() > 1){
                    nextLesson = nextDayLessons[1]
                }
            }
        }

        if (actualLesson.name != "" && actualLesson.weeks != ArrayList<Int>()){
            views.setTextViewText(R.id.startTimeLabelWidget, actualLesson.startTime)
            views.setTextViewText(R.id.stopTimeLabelWidget, actualLesson.stopTime)
            views.setTextViewText(R.id.disNameWidget, actualLesson.name + if (actualLesson.type != "") "(${actualLesson.type})" else "")
            if (nextLesson.name != "" && nextLesson.weeks != ArrayList<Int>()){
                views.setTextViewText(R.id.NextLabel, "–î–∞–ª–µ–µ ${nextLesson.name} ${if (nextLesson.rooms.count() != 0) ", " + nextLesson.rooms[0] else ""} –≤ ${nextLesson.startTime}")
            } else {
                views.setTextViewText(R.id.NextLabel, "–ü–æ—Å–ª–µ–¥–Ω—è—è –ø–∞—Ä–∞! –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è ‚òÄÔ∏è")
            }
        } else {
            views.setTextViewText(R.id.dayLabelWidget, "–ó–∞–≤—Ç—Ä–∞")
            views.setTextViewText(R.id.disNameWidget, "–ó–∞–Ω—è—Ç–∏–π –Ω–µ—Ç")
            views.setTextViewText(R.id.NextLabel, "–ú–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å üíÖ")
        }

    }


    thread {
        val dbHandler = DBHelper(context!!, null)
        data = dbHandler.loadTTfromSQLite()
        arrangedTT = getTTArrayforWidget(data, nowWeek)
        fillIn()
        appWidgetManager.updateAppWidget(appWidgetId, views)
    }


//    views.setTextViewText(R.id.NextLabel, "–ü—Ä–µ–∫–æ–ª")
        //–¥–æ—Å—Ç–∞–µ–º –¥–∞—Ç—É –∏ —Ä–∞–∑–±–∏—Ä–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏



//        var dayTime = Day()
        // 1 = –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –ø–∞—Ä —Ç–æ—á–Ω–æ –Ω–µ—Ç
//        if (nowDay != 1){
//            //—Ä–∞–±–æ—Ç–∞–µ–º —Å –º–∞—Å—Å–∏–≤–æ–º, –∏—â–µ–º –ø–∞—Ä—É, –∫–æ—Ç–æ—Ä–∞—è —Å–µ–π—á–∞—Å. –ø–æ–∑–∏—Ü–∏–∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è - 6 –ø–∞—Ä
//            var startPosition = (nowDay - 2)*6 + nowWeek*36
//            // found = 0 - –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, 1 - –Ω–∞–π–¥–µ–Ω–∞ –æ–¥–Ω–∞, 2 - –Ω–∞–π–¥–µ–Ω—ã –æ–±–µ
//            var found = 0
//            var i = startPosition
//            for (i in startPosition..startPosition+5) {
//                val para = loadedArray[i]
//                var pointRange = 0
//                Log.d(para.StartTime, para.StopTime + " " + para.Name)
//                if (para.StartTime != null && found == 0 && para.StartTime != "") {
//
//                    var cleanTime = para.StopTime!!
//                    if (para.StopTime == null) {cleanTime = "0"}
//                    cleanTime = cleanTime.replace(":", "")
//                    cleanTime = cleanTime.replace(".", "")
//
//                    val intStop = cleanTime.toInt()
//
//                    val intTime = nowHour*100 + nowMinute
//                    //—Å–º–æ—Ç—Ä–∏–º –ø–æ —É—Å–ª–æ–≤–∏—é, –∏ –µ—Å–ª–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç, —Ç–æ –º–µ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–∏—Ñ—Ä—ã
//                    if (intTime <= intStop){
//                        found = 1
//                        if (para.Aud != null && para.Aud != "null" && para.Aud != ""){
//                            views.setTextViewText(R.id.disNameWidget, para.Name + ", " + para.Aud)
//                        } else {
//                            views.setTextViewText(R.id.disNameWidget, para.Name)
//                        }
//                        views.setTextViewText(R.id.startTimeLabelWidget, para.StartTime)
//                        views.setTextViewText(R.id.stopTimeLabelWidget, para.StopTime)
//                    }
//                } else if (para.StartTime != null && found == 1 && para.StartTime != ""){
//                    //–Ω–∞—Ö–æ–¥–∏–º —Å–ª–µ–¥—É—é—â—É—é –ø–∞—Ä—É
//                    found = 2
//                    views.setTextViewText(R.id.NextLabel, "–î–∞–ª–µ–µ: " + para.Name + ", " + para.Aud + " –≤ " + para.StartTime)
//                }
//            }
//            if (found == 1){
//                //–µ—Å–ª–∏ –Ω–∞—à–ª–∞—Å—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞
//                views.setTextViewText(R.id.NextLabel, "–ü–æ—Å–ª–µ–¥–Ω—è—è –ø–∞—Ä–∞! –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è ‚òÄÔ∏è")
//            }
//            if (found == 0){
//                //–µ—Å–ª–∏ –Ω–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö, –∏—â–µ–º –ø–∞—Ä—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
//                // 30 - —Å—É–±–±–æ—Ç–∞ —á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏ (–Ω—É–ª–µ–≤–æ–π)
//                if (startPosition == 30){
//                    startPosition += 6
//                    views.setTextViewText(R.id.dayLabelWidget, "–í –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫");
//                }
//                // 66 - —Å—É–±–±–æ—Ç–∞ –Ω–µ—á–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏ (–µ–¥–∏–Ω–∏—á–Ω–æ–π)
//                else if (startPosition == 66){
//                    startPosition = 0
//                    views.setTextViewText(R.id.dayLabelWidget, "–í –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫");
//                } else {
//                    startPosition += 6
//                    views.setTextViewText(R.id.dayLabelWidget, "–ó–∞–≤—Ç—Ä–∞ " + DaysOfWeek[day.get(Calendar.DAY_OF_WEEK)]);
//                }
//                //–¥–µ–ª–∞–µ–º –ø–æ —Å—É—Ç–∏ —Ç–æ –∂–µ —Å–∞–º–æ–µ
//                i = startPosition
//                for (i in startPosition..startPosition+5) {
//                    val para = loadedArray[i]
////                    var pointRange = 0
//                    Log.d(para.StartTime, para.StopTime + " " + para.Name)
//                    if (para.StartTime != null && found == 0 && para.StartTime != "") {
//                        //—É—Å–ª–æ–≤–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç
//                        found = 1
//                        if (para.Aud != null && para.Aud != "null" && para.Aud != ""){
//                            views.setTextViewText(R.id.disNameWidget, para.Name + ", " + para.Aud)
//                        } else {
//                            views.setTextViewText(R.id.disNameWidget, para.Name)
//                        }
//                        views.setTextViewText(R.id.startTimeLabelWidget, para.StartTime)
//                        views.setTextViewText(R.id.stopTimeLabelWidget, para.StopTime)
//                    } else if (para.StartTime != null && found == 1 && para.StartTime != ""){
//                        //–ø—Ä–æ—Å—Ç–æ –µ—Å–ª–∏ –µ—Å—Ç—å –µ—â–µ –æ–¥–Ω–∞ –ø–∞—Ä–∞, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —É—Å–ª–æ–≤–∏–π
//                        found = 2
//                        views.setTextViewText(R.id.NextLabel, "–î–∞–ª–µ–µ: " + para.Name + ", " + para.Aud + " –≤ " + para.StartTime)
//                    }
//                }
//                // –µ—Å–ª–∏ –Ω–∞—à–ª–∞—Å—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞
//                if (found == 1){
//                    views.setTextViewText(R.id.NextLabel, "–ü–µ—Ä–≤–∞—è –∏ –ø–æ—Å–ª–µ–¥–Ω—è—è üéâ")
//                }
//                // –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å –í–û–û–ë–©–ï
//                else if (found == 0){
//                    views.setTextViewText(R.id.disNameWidget, "–ó–∞–Ω—è—Ç–∏–π –Ω–µ—Ç")
//                    views.setTextViewText(R.id.startTimeLabelWidget, "")
//                    views.setTextViewText(R.id.stopTimeLabelWidget, "")
//                    views.setTextViewText(R.id.NextLabel, "–ú–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å")
//                }
//            }
//        }
//        // –Ω–µ –∑–∞–±—ã–≤–∞–µ–º –ø—Ä–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
//        else {
//            //–¥–æ–±–∞–≤–ª–µ–Ω–æ 6 —Å–µ–Ω—Ç—è–±—Ä—è
//            var innerWeek = nowWeek
//            if (nowWeek == 0) {innerWeek = 1} else {innerWeek = 0}
//            var startPosition = 5*6 + innerWeek*36
//            //
//            var found = 0
//            var i = startPosition
//
//            //–Ω–µ –æ—á–µ–Ω—å –ø–æ–Ω–∏–º–∞—é, —Å–µ–π—á–∞—Å –∂–µ —Ç–æ—á–Ω–æ –Ω–µ —Å—É–±–±–æ—Ç–∞, —á—Ç–æ –∑–∞ –±—Ä–µ–¥, –Ω—É –∏ –ª–∞–¥–Ω–æ
//            // –∞ –º–æ–∂–µ—Ç –∏ –ø–æ–Ω—è—Ç–Ω–æ –∞—Ö—Ö—Ö–∞—Ö–∞—Ö–∞
//            if (startPosition == 30){
//                startPosition += 6
//                views.setTextViewText(R.id.dayLabelWidget, "–í –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫");
//            }
//            else if (startPosition == 66){
//                startPosition = 0
//                views.setTextViewText(R.id.dayLabelWidget, "–í –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫");
//            } else {
//                startPosition += 6
//                views.setTextViewText(R.id.dayLabelWidget, "–ó–∞–≤—Ç—Ä–∞ " + DaysOfWeek[day.get(Calendar.DAY_OF_WEEK)]);
//            }
//            //–∏—â–µ–º –ø–∞—Ä—ã —Å—Ä–æ—á–Ω–æ
//            for (i in startPosition..startPosition+5) {
//                val para = loadedArray[i]
//                var pointRange = 0
//
//                if (para.StartTime != null && found == 0 && para.StartTime != "") {
//                    //–Ω–∏–∫–∞–∫–∏—Ö –ª–∏—à–Ω–∏—Ö —É—Å–ª–æ–≤–∏–π
//                    found = 1
//                    if (para.Aud != null && para.Aud != "null" && para.Aud != ""){
//                        views.setTextViewText(R.id.disNameWidget, para.Name + ", " + para.Aud)
//                    } else {
//                        views.setTextViewText(R.id.disNameWidget, para.Name)
//                    }
//                    views.setTextViewText(R.id.startTimeLabelWidget, para.StartTime)
//                    views.setTextViewText(R.id.stopTimeLabelWidget, para.StopTime)
//
//                } else if (para.StartTime != null && found == 1 && para.StartTime != ""){
//                    //–ø—Ä–æ—Å—Ç–æ –∏—â–µ–º –µ—â–µ –æ–¥–Ω—É
//                    found = 2
//                    views.setTextViewText(R.id.NextLabel, "–î–∞–ª–µ–µ: " + para.Name + ", " + para.Aud + " –≤ " + para.StartTime)
//                }
//            }
//            // –µ—Å–ª–∏ –Ω–∞—à–ª–∞—Å—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞
//            if (found == 1){
//                views.setTextViewText(R.id.NextLabel, "–ü–µ—Ä–≤–∞—è –∏ –ø–æ—Å–ª–µ–¥–Ω—è—è üéâ")
//            }
//            //–µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å(((
//            else if (found == 0){
//                views.setTextViewText(R.id.disNameWidget, "–ó–∞–Ω—è—Ç–∏–π –Ω–µ—Ç")
//                views.setTextViewText(R.id.startTimeLabelWidget, "")
//                views.setTextViewText(R.id.stopTimeLabelWidget, "")
//                views.setTextViewText(R.id.NextLabel, "–ú–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å")
//            }
//        }
//
//        //–ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—Å–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å, –º—ã –≤ —Ç—Ä–µ–¥–µ –æ–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∂–µ—Ç –ø–æ –∫—Ä–∞—Å–æ—Ç–µ
//        appWidgetManager.updateAppWidget(appWidgetId, views)
}
